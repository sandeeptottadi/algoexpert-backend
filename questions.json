{
    "questions" : {
        "validate-subsequence" : ["Validate Subsequence", "Given two non-empty arrays of integers, write a function that determines whether the second array is asubsequence of the first one. A subsequence of an array is a set of numbers that aren't necessarily adjacent in the array but that are in the same order as they appear in the array. For instance, the numbers [1, 3, 4] form a subsequence of the array [1, 2, 3, 4] , and so do the numbers [2, 4] .",
         "array = [5, 1, 22, 25, 6, -1, 8, 10] sequence = [1, 6, -1, 10]", "true"],
         "two-number-sum" : ["Two Number Sum", "Write a function that takes in a non-empty array of distinct integers and an integer representing a target sum. If any two numbers in the input array sum up to the target sum, the function should return them in an array, in any order. If no two numbers sum up to the target sum, the function should return an empty array. Note that the target sum has to be obtained by summing two different integers in the array; you can't add a single integer to itself in order to obtain the target sum. You can assume that there will be at most one pair of numbers summing up to the target sum.",
        "array = [3, 5, -4, 8, 11, 1, -1, 6] targetSum = 10", "[-1, 11] // the numbers could be in reverse order"],
        "sorted-sequence-array" : ["Sorted Sequence Array", "Write a function that takes in a non-empty array of integers that are sorted in ascending order and returnsa new array of the same length with the squares of the original integers also sorted in ascending order.",
        "array = [1, 2, 3, 5, 6, 8, 9]", "[1, 4, 9, 25, 36, 64, 81]"],
        "tournament-winner" : ["Tournament Winner", "There's an algorithms tournament taking place in which teams of programmers compete against each other to solve algorithmic problems as fast as possible. Teams compete in a round robin, where each team faces off against all other teams. Only two teams compete against each other at a time, and for each competition, one team is designated the home team, while the other team is the away team. In each competition there's always one winner and one loser; there are no ties. A team receives 3 points if it wins and 0 points if it loses. The winner of the tournament is the team that receives the most amount of points. Given an array of pairs representing the teams that have competed against each other and an array containing the results of each competition, write a function that returns the winner of the tournament. The input arrays are named competitions and results , respectively. The competitions array has elements in the form of [homeTeam, awayTeam] , where each team is a string of at most 30 characters representing the name of the team. The results array contains information about the winner of each corresponding competition in the competitions array. Specifically, results[i] denotes the winner of competitions[i] , where a 1 in the results array means that the home team in the corresponding competition won and a 0 means that the away team won. It's guaranteed that exactly one team will win the tournament and that each team will compete against all other teams exactly once. It's also guaranteed that the tournament will always have at least two teams.",
        "competitions = [ ['HTML', 'C#'], ['C#', 'Python'], ['Python', 'HTML'], ] results = [0, 0, 1]", "'Python' // C# beats HTML, Python Beats C#, and Python Beats HTML. // HTML - 0 points // C# - 3 points // Python - 6 points"],
        "nth-fibonacci" : ["Nth Fibonacci", "The Fibonacci sequence is defined as follows: the first number of the sequence is 0 , the second number is 1 , and the nth number is the sum of the (n - 1)th and (n - 2)th numbers. Write a function that takes in an integer n and returns the nth Fibonacci number. Important note: the Fibonacci sequence is often defined with its first two numbers as F0 = 0 and F1 = 1 . For the purpose of this question, the first Fibonacci number is F0 ; therefore, getNthFib(1) is equal to F0 , getNthFib(2) is equal to F1 , etc..",
        "n = 2", "1 // 0, 1"],
        "product-sum" : ["Product Sum", "Write a function that takes in a 'special' array and returns its product sum. A 'special' array is a non-empty array that contains either integers or other 'special' arrays. The product sum of a 'special' array is the sum of its elements, where 'special' arrays inside it are summed themselves and then multiplied by their level of depth. The depth of a 'special' array is how far nested it is. For instance, the depth of [] is 1 ; the depth of the inner array in [[]] is 2 ; the depth of the innermost array in [[[]]] is 3 . Therefore, the product sum of [x, y] is x + y ; the product sum of [x, [y, z]] is x + 2 * (y + z) ; the product sum of [x, [y, [z]]] is x + 2 * (y + 3z) .",
        "array = [5, 2, [7, -1], 3, [6, [-13, 8], 4]]", "12 // calculated as: 5 + 2 + 2 * (7 - 1) + 3 + 2 * (6 + 3 * (-13 + 8) + 4)"],
        "bubble-sort" : ["Bubble Sort", "Write a function that takes in an array of integers and returns a sorted version of that array. Use the Bubble Sort algorithm to sort the array. If you're unfamiliar with Bubble Sort, we recommend watching the Conceptual Overview section of this question's video explanation before starting to code. ",
        "array = [8, 5, 2, 9, 5, 6, 3]", "[2, 3, 5, 5, 6, 8, 9]"],
        "palindrome-check" : ["Palindrome Check", "Write a function that takes in a non-empty string and that returns a boolean representing whether the string is a palindrome. A palindrome is defined as a string that's written the same forward and backward. Note that singlecharacter strings are palindromes. ",
        "string = 'abcdcba'","true // it's written the same forward and backward"],
        "insertion-sort" : ["Insertion Sort", "Write a function that takes in an array of integers and returns a sorted version of that array. Use the Insertion Sort algorithm to sort the array. If you're unfamiliar with Insertion Sort, we recommend watching the Conceptual Overview section of this question's video explanation before starting to code.",
        "array = [8, 5, 2, 9, 5, 6, 3]", "[2, 3, 5, 5, 6, 8, 9]"],
        "depth-first-search": ["Deapth First Search", "You're given a Node class that has a name and an array of optional children nodes. When put together, nodes form an acyclic tree-like structure. Implement the depthFirstSearch method on the Node class, which takes in an empty array, traverses the tree using the Depth-first Search approach (specifically navigating the tree from left to right), stores all of the nodes' names in the input array, and returns it. If you're unfamiliar with Depth-first Search, we recommend watching the Conceptual Overview section of this question's video explanation before starting to code. ",
        "graph = A B C D E F G H I J K", "['A', 'B', 'E', 'F', 'I', 'J', 'C', 'D', 'G', 'K', 'H']"],
        "binary-search" : ["Write a function that takes in a sorted array of integers as well as a target integer. The function should use the Binary Search algorithm to determine if the target integer is contained in the array and should return its index if it is, otherwise -1 . If you're unfamiliar with Binary Search, we recommend watching the Conceptual Overview section of this question's video explanation before starting to code. ",
        "array = [0, 1, 21, 33, 45, 45, 61, 71, 72, 73] target = 33", "3"],
        "branch-sums" : ["Branch Sums", "Write a function that takes in a Binary Tree and returns a list of its branch sums ordered from leftmost  branch sum to rightmost branch sum.  A branch sum is the sum of all values in a Binary Tree branch. A Binary Tree branch is a path of nodes in a  tree that starts at the root node and ends at any leaf node.  Each BinaryTree node has an integer value , a left child node, and a right child node. Children  nodes can either be BinaryTree nodes themselves or None / null .  ",
        "tree = 1 2 3 4 5 6 7 8 9 10","[15, 16, 18, 10, 11] // 15 == 1 + 2 + 4 + 8 // 16 == 1 + 2 + 4 + 9 // 18 == 1 + 2 + 5 + 10 // 10 == 1 + 3 + 6 // 11 == 1 + 3 + 7 "]
    }
}